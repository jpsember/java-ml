// Defines a neural network

enum gen.NetworkProjectType;
enum gen.DataType;
enum gen.SpecialOption;

fields {
  int version;

  NetworkProjectType project_type;

  * Layer layers;

  // Number of weights (not their size, which is times sizeof(byte))
  //
  long weight_count;

  // Default values:

  // For CONV layers: the kernel's spatial extent; 1, 3, 5... (meaning 1x1, 3x3, 5x5...)
  //
  int kernel_width = 3;

  // For LEAKY_RELU, the alpha value
  //
  float alpha = 0.01;

  // Default stride to apply for MAXPOOL, or CONV layers when pool=true
  //
  IPoint stride = [2, 2];

  // If nonzero, and network is for training, a dropout layer is added to the end of the layer to randomly drop out
  // elements with these probabilities
  //
  float dropout_input = 0.2;
  float dropout_hidden = 0.5;

  JSMap model_config;

  // True if the source images are .rax (or .raw) files, as opposed to color images.
  // This is independent of the depth of the images the model manipulates.
  //
  bool monochrome_source_images;

  DataType image_data_type;
  DataType label_data_type;

  SpecialOption special_option;
}
